{
  "contractName": "IERC20Metadata",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n",
  "sourcePath": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol",
  "ast": {
    "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "exportedSymbols": {
      "IERC20": [
<<<<<<< HEAD
        3408
      ],
      "IERC20Metadata": [
        3433
      ]
    },
    "id": 3434,
=======
        3531
      ],
      "IERC20Metadata": [
        3556
      ]
    },
    "id": 3557,
>>>>>>> main
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
<<<<<<< HEAD
        "id": 3410,
=======
        "id": 3533,
>>>>>>> main
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:15"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "../IERC20.sol",
<<<<<<< HEAD
        "id": 3411,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3434,
        "sourceUnit": 3409,
=======
        "id": 3534,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3557,
        "sourceUnit": 3532,
>>>>>>> main
        "src": "58:23:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
<<<<<<< HEAD
              "id": 3413,
              "name": "IERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3408,
              "src": "228:6:15"
            },
            "id": 3414,
=======
              "id": 3536,
              "name": "IERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3531,
              "src": "228:6:15"
            },
            "id": 3537,
>>>>>>> main
            "nodeType": "InheritanceSpecifier",
            "src": "228:6:15"
          }
        ],
        "contractDependencies": [
<<<<<<< HEAD
          3408
        ],
        "contractKind": "interface",
        "documentation": {
          "id": 3412,
=======
          3531
        ],
        "contractKind": "interface",
        "documentation": {
          "id": 3535,
>>>>>>> main
          "nodeType": "StructuredDocumentation",
          "src": "83:116:15",
          "text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
        },
        "fullyImplemented": false,
<<<<<<< HEAD
        "id": 3433,
        "linearizedBaseContracts": [
          3433,
          3408
=======
        "id": 3556,
        "linearizedBaseContracts": [
          3556,
          3531
>>>>>>> main
        ],
        "name": "IERC20Metadata",
        "nameLocation": "210:14:15",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
<<<<<<< HEAD
              "id": 3415,
=======
              "id": 3538,
>>>>>>> main
              "nodeType": "StructuredDocumentation",
              "src": "241:54:15",
              "text": " @dev Returns the name of the token."
            },
            "functionSelector": "06fdde03",
<<<<<<< HEAD
            "id": 3420,
=======
            "id": 3543,
>>>>>>> main
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "309:4:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 3416,
=======
              "id": 3539,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "313:2:15"
            },
            "returnParameters": {
<<<<<<< HEAD
              "id": 3419,
=======
              "id": 3542,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3418,
=======
                  "id": 3541,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 3420,
=======
                  "scope": 3543,
>>>>>>> main
                  "src": "339:13:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 3417,
=======
                    "id": 3540,
>>>>>>> main
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "339:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "338:15:15"
            },
<<<<<<< HEAD
            "scope": 3433,
=======
            "scope": 3556,
>>>>>>> main
            "src": "300:54:15",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
<<<<<<< HEAD
              "id": 3421,
=======
              "id": 3544,
>>>>>>> main
              "nodeType": "StructuredDocumentation",
              "src": "360:56:15",
              "text": " @dev Returns the symbol of the token."
            },
            "functionSelector": "95d89b41",
<<<<<<< HEAD
            "id": 3426,
=======
            "id": 3549,
>>>>>>> main
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "430:6:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 3422,
=======
              "id": 3545,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "436:2:15"
            },
            "returnParameters": {
<<<<<<< HEAD
              "id": 3425,
=======
              "id": 3548,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3424,
=======
                  "id": 3547,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 3426,
=======
                  "scope": 3549,
>>>>>>> main
                  "src": "462:13:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 3423,
=======
                    "id": 3546,
>>>>>>> main
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "462:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "461:15:15"
            },
<<<<<<< HEAD
            "scope": 3433,
=======
            "scope": 3556,
>>>>>>> main
            "src": "421:56:15",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
<<<<<<< HEAD
              "id": 3427,
=======
              "id": 3550,
>>>>>>> main
              "nodeType": "StructuredDocumentation",
              "src": "483:65:15",
              "text": " @dev Returns the decimals places of the token."
            },
            "functionSelector": "313ce567",
<<<<<<< HEAD
            "id": 3432,
=======
            "id": 3555,
>>>>>>> main
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "562:8:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 3428,
=======
              "id": 3551,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "570:2:15"
            },
            "returnParameters": {
<<<<<<< HEAD
              "id": 3431,
=======
              "id": 3554,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3430,
=======
                  "id": 3553,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 3432,
=======
                  "scope": 3555,
>>>>>>> main
                  "src": "596:5:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 3429,
=======
                    "id": 3552,
>>>>>>> main
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "596:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "595:7:15"
            },
<<<<<<< HEAD
            "scope": 3433,
=======
            "scope": 3556,
>>>>>>> main
            "src": "553:50:15",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
<<<<<<< HEAD
        "scope": 3434,
=======
        "scope": 3557,
>>>>>>> main
        "src": "200:405:15"
      }
    ],
    "src": "33:573:15"
  },
  "legacyAST": {
    "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "exportedSymbols": {
      "IERC20": [
<<<<<<< HEAD
        3408
      ],
      "IERC20Metadata": [
        3433
      ]
    },
    "id": 3434,
=======
        3531
      ],
      "IERC20Metadata": [
        3556
      ]
    },
    "id": 3557,
>>>>>>> main
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
<<<<<<< HEAD
        "id": 3410,
=======
        "id": 3533,
>>>>>>> main
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:15"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "../IERC20.sol",
<<<<<<< HEAD
        "id": 3411,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3434,
        "sourceUnit": 3409,
=======
        "id": 3534,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3557,
        "sourceUnit": 3532,
>>>>>>> main
        "src": "58:23:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
<<<<<<< HEAD
              "id": 3413,
              "name": "IERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3408,
              "src": "228:6:15"
            },
            "id": 3414,
=======
              "id": 3536,
              "name": "IERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3531,
              "src": "228:6:15"
            },
            "id": 3537,
>>>>>>> main
            "nodeType": "InheritanceSpecifier",
            "src": "228:6:15"
          }
        ],
        "contractDependencies": [
<<<<<<< HEAD
          3408
        ],
        "contractKind": "interface",
        "documentation": {
          "id": 3412,
=======
          3531
        ],
        "contractKind": "interface",
        "documentation": {
          "id": 3535,
>>>>>>> main
          "nodeType": "StructuredDocumentation",
          "src": "83:116:15",
          "text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
        },
        "fullyImplemented": false,
<<<<<<< HEAD
        "id": 3433,
        "linearizedBaseContracts": [
          3433,
          3408
=======
        "id": 3556,
        "linearizedBaseContracts": [
          3556,
          3531
>>>>>>> main
        ],
        "name": "IERC20Metadata",
        "nameLocation": "210:14:15",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
<<<<<<< HEAD
              "id": 3415,
=======
              "id": 3538,
>>>>>>> main
              "nodeType": "StructuredDocumentation",
              "src": "241:54:15",
              "text": " @dev Returns the name of the token."
            },
            "functionSelector": "06fdde03",
<<<<<<< HEAD
            "id": 3420,
=======
            "id": 3543,
>>>>>>> main
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "309:4:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 3416,
=======
              "id": 3539,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "313:2:15"
            },
            "returnParameters": {
<<<<<<< HEAD
              "id": 3419,
=======
              "id": 3542,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3418,
=======
                  "id": 3541,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 3420,
=======
                  "scope": 3543,
>>>>>>> main
                  "src": "339:13:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 3417,
=======
                    "id": 3540,
>>>>>>> main
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "339:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "338:15:15"
            },
<<<<<<< HEAD
            "scope": 3433,
=======
            "scope": 3556,
>>>>>>> main
            "src": "300:54:15",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
<<<<<<< HEAD
              "id": 3421,
=======
              "id": 3544,
>>>>>>> main
              "nodeType": "StructuredDocumentation",
              "src": "360:56:15",
              "text": " @dev Returns the symbol of the token."
            },
            "functionSelector": "95d89b41",
<<<<<<< HEAD
            "id": 3426,
=======
            "id": 3549,
>>>>>>> main
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "430:6:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 3422,
=======
              "id": 3545,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "436:2:15"
            },
            "returnParameters": {
<<<<<<< HEAD
              "id": 3425,
=======
              "id": 3548,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3424,
=======
                  "id": 3547,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 3426,
=======
                  "scope": 3549,
>>>>>>> main
                  "src": "462:13:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 3423,
=======
                    "id": 3546,
>>>>>>> main
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "462:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "461:15:15"
            },
<<<<<<< HEAD
            "scope": 3433,
=======
            "scope": 3556,
>>>>>>> main
            "src": "421:56:15",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
<<<<<<< HEAD
              "id": 3427,
=======
              "id": 3550,
>>>>>>> main
              "nodeType": "StructuredDocumentation",
              "src": "483:65:15",
              "text": " @dev Returns the decimals places of the token."
            },
            "functionSelector": "313ce567",
<<<<<<< HEAD
            "id": 3432,
=======
            "id": 3555,
>>>>>>> main
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "562:8:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 3428,
=======
              "id": 3551,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "570:2:15"
            },
            "returnParameters": {
<<<<<<< HEAD
              "id": 3431,
=======
              "id": 3554,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3430,
=======
                  "id": 3553,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 3432,
=======
                  "scope": 3555,
>>>>>>> main
                  "src": "596:5:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 3429,
=======
                    "id": 3552,
>>>>>>> main
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "596:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "595:7:15"
            },
<<<<<<< HEAD
            "scope": 3433,
=======
            "scope": 3556,
>>>>>>> main
            "src": "553:50:15",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
<<<<<<< HEAD
        "scope": 3434,
=======
        "scope": 3557,
>>>>>>> main
        "src": "200:405:15"
      }
    ],
    "src": "33:573:15"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.3+commit.8d00100c.Emscripten.clang"
  },
  "networks": {},
<<<<<<< HEAD
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-10-07T05:10:09.829Z",
=======
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-10-07T21:37:26.894Z",
>>>>>>> main
  "devdoc": {
    "details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
      },
      "approve(address,uint256)": {
        "details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
      },
      "balanceOf(address)": {
        "details": "Returns the amount of tokens owned by `account`."
      },
      "decimals()": {
        "details": "Returns the decimals places of the token."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token."
      },
      "totalSupply()": {
        "details": "Returns the amount of tokens in existence."
      },
      "transfer(address,uint256)": {
        "details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}