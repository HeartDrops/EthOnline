{
  "contractName": "ACHouse",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_userType",
          "type": "uint256"
        }
      ],
      "name": "register",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "createNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"createNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_userType\",\"type\":\"uint256\"}],\"name\":\"register\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createNFT()\":{\"notice\":\"after user connects wallet to web3 and gets access to website.  Options avaiable for USER: Create NFT  Fractionalize NFT function createNFT(string memory _name, string memory _symbol, string memory _desc, string memory _imageURL) public { // if using ERC1155 - we need to create a JSON object and store it in IPFS or in blockchain. it requires a URI pointed at json file and then minting can take place.  // if using ERC721 - only name and symbol is needed to along with unique id for the NFT to create.  //calls ACHouseToken.mintERC1155 or ACHouseToken.mintERC721 depending on implementation } function fracNFT(string memory _shardName, string memory _shardSymbol, uint256 supply, uint256 _ownerRetain, uint256 _price) public { // owner retain - amount of shards (tokes) will be given to the user, if all then end of steps.  // if user wants to generate funds, owner retain will be less than 100 and user sets price per shard (token).  //calls ACHouseToken.mintERC1155 or ACHouseToken.mintERC20 depending on implementation }\"},\"register(string,uint256)\":{\"notice\":\"Functions - Registration  \"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/dinesh/Projects/BnktAuction/contracts/ACHouse.sol\":\"ACHouse\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/dinesh/Projects/BnktAuction/contracts/ACHouse.sol\":{\"keccak256\":\"0x0e45675ff7cd35d5571cb358603892f9a2b59ec433d4ecc7ff050c9a763f08c4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c8f9fc41dc19f85ae2d19ce7e34282b3b088a78ab70bbbe49f19e253000d9bde\",\"dweb:/ipfs/QmbzkkA5ZzLDWVdsKuRKhtcGoZhUWDHNay3X2KqZ9HA68U\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506108cd806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80638a97ec2a1461003b578063ea87152b14610045575b600080fd5b610043610075565b005b61005f600480360381019061005a91906105d2565b610077565b60405161006c9190610658565b60405180910390f35b565b6000801515610085336103d7565b1515146100c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100be90610673565b60405180910390fd5b60018214156101ac57600060405180604001604052808581526020013373ffffffffffffffffffffffffffffffffffffffff16815250905080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001908051906020019061015b9291906104b2565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050505061036a565b600282141561029157600060405180604001604052808581526020013373ffffffffffffffffffffffffffffffffffffffff16815250905080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190805190602001906102409291906104b2565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505050610369565b600060405180604001604052808581526020013373ffffffffffffffffffffffffffffffffffffffff16815250905080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001908051906020019061031c9291906104b2565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050505b5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905092915050565b600080600090505b6000805490508160ff1610156104a7578273ffffffffffffffffffffffffffffffffffffffff1660008260ff1681548110610443577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156104945760019150506104ad565b808061049f9061078f565b9150506103df565b50600090505b919050565b8280546104be9061072c565b90600052602060002090601f0160209004810192826104e05760008555610527565b82601f106104f957805160ff1916838001178555610527565b82800160010185558215610527579182015b8281111561052657825182559160200191906001019061050b565b5b5090506105349190610538565b5090565b5b80821115610551576000816000905550600101610539565b5090565b6000610568610563846106b8565b610693565b90508281526020810184848401111561058057600080fd5b61058b84828561071d565b509392505050565b600082601f8301126105a457600080fd5b81356105b4848260208601610555565b91505092915050565b6000813590506105cc81610880565b92915050565b600080604083850312156105e557600080fd5b600083013567ffffffffffffffff8111156105ff57600080fd5b61060b85828601610593565b925050602061061c858286016105bd565b9150509250929050565b61062f816106fa565b82525050565b60006106426017836106e9565b915061064d82610857565b602082019050919050565b600060208201905061066d6000830184610626565b92915050565b6000602082019050818103600083015261068c81610635565b9050919050565b600061069d6106ae565b90506106a9828261075e565b919050565b6000604051905090565b600067ffffffffffffffff8211156106d3576106d2610817565b5b6106dc82610846565b9050602081019050919050565b600082825260208201905092915050565b60008115159050919050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b6000600282049050600182168061074457607f821691505b60208210811415610758576107576107e8565b5b50919050565b61076782610846565b810181811067ffffffffffffffff8211171561078657610785610817565b5b80604052505050565b600061079a82610710565b915060ff8214156107ae576107ad6107b9565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f5573657220416c72656164792072656769737465726564000000000000000000600082015250565b61088981610706565b811461089457600080fd5b5056fea264697066735822122071c29edbd79b410425525b5b3f3128df5308502d7b04c95bc4b6b14e72c03dd464736f6c63430008030033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80638a97ec2a1461003b578063ea87152b14610045575b600080fd5b610043610075565b005b61005f600480360381019061005a91906105d2565b610077565b60405161006c9190610658565b60405180910390f35b565b6000801515610085336103d7565b1515146100c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100be90610673565b60405180910390fd5b60018214156101ac57600060405180604001604052808581526020013373ffffffffffffffffffffffffffffffffffffffff16815250905080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001908051906020019061015b9291906104b2565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050505061036a565b600282141561029157600060405180604001604052808581526020013373ffffffffffffffffffffffffffffffffffffffff16815250905080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190805190602001906102409291906104b2565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505050610369565b600060405180604001604052808581526020013373ffffffffffffffffffffffffffffffffffffffff16815250905080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001908051906020019061031c9291906104b2565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050505b5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905092915050565b600080600090505b6000805490508160ff1610156104a7578273ffffffffffffffffffffffffffffffffffffffff1660008260ff1681548110610443577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156104945760019150506104ad565b808061049f9061078f565b9150506103df565b50600090505b919050565b8280546104be9061072c565b90600052602060002090601f0160209004810192826104e05760008555610527565b82601f106104f957805160ff1916838001178555610527565b82800160010185558215610527579182015b8281111561052657825182559160200191906001019061050b565b5b5090506105349190610538565b5090565b5b80821115610551576000816000905550600101610539565b5090565b6000610568610563846106b8565b610693565b90508281526020810184848401111561058057600080fd5b61058b84828561071d565b509392505050565b600082601f8301126105a457600080fd5b81356105b4848260208601610555565b91505092915050565b6000813590506105cc81610880565b92915050565b600080604083850312156105e557600080fd5b600083013567ffffffffffffffff8111156105ff57600080fd5b61060b85828601610593565b925050602061061c858286016105bd565b9150509250929050565b61062f816106fa565b82525050565b60006106426017836106e9565b915061064d82610857565b602082019050919050565b600060208201905061066d6000830184610626565b92915050565b6000602082019050818103600083015261068c81610635565b9050919050565b600061069d6106ae565b90506106a9828261075e565b919050565b6000604051905090565b600067ffffffffffffffff8211156106d3576106d2610817565b5b6106dc82610846565b9050602081019050919050565b600082825260208201905092915050565b60008115159050919050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b6000600282049050600182168061074457607f821691505b60208210811415610758576107576107e8565b5b50919050565b61076782610846565b810181811067ffffffffffffffff8211171561078657610785610817565b5b80604052505050565b600061079a82610710565b915060ff8214156107ae576107ad6107b9565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f5573657220416c72656164792072656769737465726564000000000000000000600082015250565b61088981610706565b811461089457600080fd5b5056fea264697066735822122071c29edbd79b410425525b5b3f3128df5308502d7b04c95bc4b6b14e72c03dd464736f6c63430008030033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:5342:19",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "91:261:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "101:75:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "168:6:19"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "126:41:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "126:49:19"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "110:15:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "110:66:19"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "101:5:19"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "192:5:19"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "199:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "185:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "185:21:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "185:21:19"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "215:27:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "230:5:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "237:4:19",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "226:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "226:16:19"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "219:3:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "280:16:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "289:1:19",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "292:1:19",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "282:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "282:12:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "282:12:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "261:3:19"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "266:6:19"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "257:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "257:16:19"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "275:3:19"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "254:2:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "254:25:19"
                  },
                  "nodeType": "YulIf",
                  "src": "251:2:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "329:3:19"
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "334:3:19"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "339:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "copy_calldata_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "305:23:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "305:41:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "305:41:19"
                }
              ]
            },
            "name": "abi_decode_available_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "64:3:19",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "69:6:19",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "77:3:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "85:5:19",
                "type": ""
              }
            ],
            "src": "7:345:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "434:211:19",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "483:16:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "492:1:19",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "495:1:19",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "485:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "485:12:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "485:12:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "462:6:19"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "470:4:19",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "458:3:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "458:17:19"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "477:3:19"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "454:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "454:27:19"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "447:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "447:35:19"
                  },
                  "nodeType": "YulIf",
                  "src": "444:2:19"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "508:34:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "535:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "522:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "522:20:19"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "512:6:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "551:88:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "612:6:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "620:4:19",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "608:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "608:17:19"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "627:6:19"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "635:3:19"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "560:47:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "560:79:19"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "551:5:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "412:6:19",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "420:3:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "428:5:19",
                "type": ""
              }
            ],
            "src": "372:273:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "703:87:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "713:29:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "735:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "722:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "722:20:19"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "713:5:19"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "778:5:19"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "751:26:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "751:33:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "751:33:19"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "681:6:19",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "689:3:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "697:5:19",
                "type": ""
              }
            ],
            "src": "651:139:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "889:427:19",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "935:16:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "944:1:19",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "947:1:19",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "937:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "937:12:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "937:12:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "910:7:19"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "919:9:19"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "906:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "906:23:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "931:2:19",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "902:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "902:32:19"
                  },
                  "nodeType": "YulIf",
                  "src": "899:2:19"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "961:220:19",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "976:45:19",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1007:9:19"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1018:1:19",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1003:3:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1003:17:19"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "990:12:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "990:31:19"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "980:6:19",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1068:16:19",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1077:1:19",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1080:1:19",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1070:6:19"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1070:12:19"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1070:12:19"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1040:6:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1048:18:19",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1037:2:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1037:30:19"
                      },
                      "nodeType": "YulIf",
                      "src": "1034:2:19"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1098:73:19",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1143:9:19"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1154:6:19"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1139:3:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1139:22:19"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1163:7:19"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "1108:30:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1108:63:19"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1098:6:19"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1191:118:19",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1206:16:19",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1220:2:19",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1210:6:19",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1236:63:19",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1271:9:19"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1282:6:19"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1267:3:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1267:22:19"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1291:7:19"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1246:20:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1246:53:19"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1236:6:19"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "851:9:19",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "862:7:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "874:6:19",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "882:6:19",
                "type": ""
              }
            ],
            "src": "796:520:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1381:50:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1398:3:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1418:5:19"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "1403:14:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1403:21:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1391:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1391:34:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1391:34:19"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1369:5:19",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1376:3:19",
                "type": ""
              }
            ],
            "src": "1322:109:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1583:220:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1593:74:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1659:3:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1664:2:19",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1600:58:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1600:67:19"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1593:3:19"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1765:3:19"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_f39789fb8036270d25b07acb9ca0aeb2c90c4c6cd78ca329efeb934be4cc21cf",
                      "nodeType": "YulIdentifier",
                      "src": "1676:88:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1676:93:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1676:93:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1778:19:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1789:3:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1794:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1785:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1785:12:19"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1778:3:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_f39789fb8036270d25b07acb9ca0aeb2c90c4c6cd78ca329efeb934be4cc21cf_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1571:3:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1579:3:19",
                "type": ""
              }
            ],
            "src": "1437:366:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1901:118:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1911:26:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1923:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1934:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1919:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1919:18:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1911:4:19"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1985:6:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1998:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2009:1:19",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1994:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1994:17:19"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1947:37:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1947:65:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1947:65:19"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1873:9:19",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1885:6:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1896:4:19",
                "type": ""
              }
            ],
            "src": "1809:210:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2196:248:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2206:26:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2218:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2229:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2214:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2214:18:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2206:4:19"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2253:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2264:1:19",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2249:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2249:17:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2272:4:19"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2278:9:19"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2268:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2268:20:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2242:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2242:47:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2242:47:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2298:139:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "2432:4:19"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_f39789fb8036270d25b07acb9ca0aeb2c90c4c6cd78ca329efeb934be4cc21cf_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2306:124:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2306:131:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2298:4:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f39789fb8036270d25b07acb9ca0aeb2c90c4c6cd78ca329efeb934be4cc21cf__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2176:9:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2191:4:19",
                "type": ""
              }
            ],
            "src": "2025:419:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2491:88:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2501:30:19",
                  "value": {
                    "arguments": [],
                    "functionName": {
                      "name": "allocate_unbounded",
                      "nodeType": "YulIdentifier",
                      "src": "2511:18:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2511:20:19"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "2501:6:19"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2560:6:19"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "2568:4:19"
                      }
                    ],
                    "functionName": {
                      "name": "finalize_allocation",
                      "nodeType": "YulIdentifier",
                      "src": "2540:19:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2540:33:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2540:33:19"
                }
              ]
            },
            "name": "allocate_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "2475:4:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2484:6:19",
                "type": ""
              }
            ],
            "src": "2450:129:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2625:35:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2635:19:19",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2651:2:19",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2645:5:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2645:9:19"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "2635:6:19"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2618:6:19",
                "type": ""
              }
            ],
            "src": "2585:75:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2733:241:19",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2838:22:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "2840:16:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2840:18:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2840:18:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2810:6:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2818:18:19",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2807:2:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2807:30:19"
                  },
                  "nodeType": "YulIf",
                  "src": "2804:2:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2870:37:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2900:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "round_up_to_mul_of_32",
                      "nodeType": "YulIdentifier",
                      "src": "2878:21:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2878:29:19"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "2870:4:19"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2944:23:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "2956:4:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2962:4:19",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2952:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2952:15:19"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "2944:4:19"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2717:6:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "2728:4:19",
                "type": ""
              }
            ],
            "src": "2666:308:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3076:73:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3093:3:19"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3098:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3086:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3086:19:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3086:19:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3114:29:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3133:3:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3138:4:19",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3129:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3129:14:19"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "3114:11:19"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3048:3:19",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3053:6:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "3064:11:19",
                "type": ""
              }
            ],
            "src": "2980:169:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3197:48:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3207:32:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3232:5:19"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3225:6:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3225:13:19"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3218:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3218:21:19"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3207:7:19"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3179:5:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3189:7:19",
                "type": ""
              }
            ],
            "src": "3155:90:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3296:32:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3306:16:19",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3317:5:19"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3306:7:19"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3278:5:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3288:7:19",
                "type": ""
              }
            ],
            "src": "3251:77:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3377:43:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3387:27:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3402:5:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3409:4:19",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3398:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3398:16:19"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3387:7:19"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3359:5:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3369:7:19",
                "type": ""
              }
            ],
            "src": "3334:86:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3477:103:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "3500:3:19"
                      },
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "3505:3:19"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3510:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "3487:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3487:30:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3487:30:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "3558:3:19"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3563:6:19"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3554:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3554:16:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3572:1:19",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3547:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3547:27:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3547:27:19"
                }
              ]
            },
            "name": "copy_calldata_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "3459:3:19",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "3464:3:19",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3469:6:19",
                "type": ""
              }
            ],
            "src": "3426:154:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3637:269:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3647:22:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "3661:4:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3667:1:19",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "3657:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3657:12:19"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "3647:6:19"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3678:38:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "3708:4:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3714:1:19",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3704:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3704:12:19"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "3682:18:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3755:51:19",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3769:27:19",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "3783:6:19"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3791:4:19",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "3779:3:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3779:17:19"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3769:6:19"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "3735:18:19"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3728:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3728:26:19"
                  },
                  "nodeType": "YulIf",
                  "src": "3725:2:19"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3858:42:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "3872:16:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3872:18:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3872:18:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "3822:18:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3845:6:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3853:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3842:2:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3842:14:19"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "3819:2:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3819:38:19"
                  },
                  "nodeType": "YulIf",
                  "src": "3816:2:19"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "3621:4:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3630:6:19",
                "type": ""
              }
            ],
            "src": "3586:320:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3955:238:19",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3965:58:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "3987:6:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "4017:4:19"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "3995:21:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3995:27:19"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3983:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3983:40:19"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "3969:10:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4134:22:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "4136:16:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4136:18:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4136:18:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "4077:10:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4089:18:19",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "4074:2:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4074:34:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "4113:10:19"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4125:6:19"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "4110:2:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4110:22:19"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "4071:2:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4071:62:19"
                  },
                  "nodeType": "YulIf",
                  "src": "4068:2:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4172:2:19",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "4176:10:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4165:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4165:22:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4165:22:19"
                }
              ]
            },
            "name": "finalize_allocation",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "3941:6:19",
                "type": ""
              },
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "3949:4:19",
                "type": ""
              }
            ],
            "src": "3912:281:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4240:126:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4250:31:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4275:5:19"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "4259:15:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4259:22:19"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "4250:5:19"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4309:22:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "4311:16:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4311:18:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4311:18:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4296:5:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4303:4:19",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "4293:2:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4293:15:19"
                  },
                  "nodeType": "YulIf",
                  "src": "4290:2:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4340:20:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4351:5:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4358:1:19",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4347:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4347:13:19"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "4340:3:19"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4226:5:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "4236:3:19",
                "type": ""
              }
            ],
            "src": "4199:167:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4400:152:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4417:1:19",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4420:77:19",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4410:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4410:88:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4410:88:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4514:1:19",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4517:4:19",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4507:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4507:15:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4507:15:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4538:1:19",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4541:4:19",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "4531:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4531:15:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4531:15:19"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "4372:180:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4586:152:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4603:1:19",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4606:77:19",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4596:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4596:88:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4596:88:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4700:1:19",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4703:4:19",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4693:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4693:15:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4693:15:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4724:1:19",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4727:4:19",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "4717:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4717:15:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4717:15:19"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "4558:180:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4772:152:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4789:1:19",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4792:77:19",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4782:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4782:88:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4782:88:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4886:1:19",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4889:4:19",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4879:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4879:15:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4879:15:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4910:1:19",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4913:4:19",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "4903:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4903:15:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4903:15:19"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "4744:180:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4978:54:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4988:38:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5006:5:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5013:2:19",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5002:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5002:14:19"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5022:2:19",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "5018:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5018:7:19"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "4998:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4998:28:19"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "4988:6:19"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4961:5:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "4971:6:19",
                "type": ""
              }
            ],
            "src": "4930:102:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5144:67:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5166:6:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5174:1:19",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5162:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5162:14:19"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5178:25:19",
                        "type": "",
                        "value": "User Already registered"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5155:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5155:49:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5155:49:19"
                }
              ]
            },
            "name": "store_literal_in_memory_f39789fb8036270d25b07acb9ca0aeb2c90c4c6cd78ca329efeb934be4cc21cf",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5136:6:19",
                "type": ""
              }
            ],
            "src": "5038:173:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5260:79:19",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5317:16:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5326:1:19",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5329:1:19",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5319:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5319:12:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5319:12:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5283:5:19"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5308:5:19"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "5290:17:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5290:24:19"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "5280:2:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5280:35:19"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5273:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5273:43:19"
                  },
                  "nodeType": "YulIf",
                  "src": "5270:2:19"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5253:5:19",
                "type": ""
              }
            ],
            "src": "5217:122:19"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_stringliteral_f39789fb8036270d25b07acb9ca0aeb2c90c4c6cd78ca329efeb934be4cc21cf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_f39789fb8036270d25b07acb9ca0aeb2c90c4c6cd78ca329efeb934be4cc21cf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f39789fb8036270d25b07acb9ca0aeb2c90c4c6cd78ca329efeb934be4cc21cf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f39789fb8036270d25b07acb9ca0aeb2c90c4c6cd78ca329efeb934be4cc21cf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function increment_t_uint8(value) -> ret {\n        value := cleanup_t_uint8(value)\n        if eq(value, 0xff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_f39789fb8036270d25b07acb9ca0aeb2c90c4c6cd78ca329efeb934be4cc21cf(memPtr) {\n\n        mstore(add(memPtr, 0), \"User Already registered\")\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 19,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "100:3249:0:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "100:3249:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2566:414;;;:::i;:::-;;679:750;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2566:414;:::o;679:750::-;750:4;806:5;774:37;;:28;791:10;774:16;:28::i;:::-;:37;;;766:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;959:1;946:9;:14;943:408;;;975:17;995:26;;;;;;;;1003:5;995:26;;;;1010:10;995:26;;;;;975:46;;1064:2;1035:14;:26;1050:10;1035:26;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;943:408;;;;1099:1;1086:9;:14;1082:269;;;1115:16;1134:25;;;;;;;;1141:5;1134:25;;;;1148:10;1134:25;;;;;1115:44;;1201:2;1173:13;:25;1187:10;1173:25;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1082:269;;;;1233:23;1259:30;;;;;;;;1271:5;1259:30;;;;1278:10;1259:30;;;;;1233:56;;1336:4;1303:18;:30;1322:10;1303:30;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1082:269;;943:408;1361:23;1390:10;1361:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1418:4;1411:11;;679:750;;;;:::o;2988:358::-;3056:4;3087:7;3097:1;3087:11;;3082:207;3104:23;:30;;;;3100:1;:34;;;3082:207;;;3201:8;3171:38;;:23;3195:1;3171:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:38;;;3168:111;;;3236:4;3228:13;;;;;3168:111;3136:3;;;;;:::i;:::-;;;;3082:207;;;;3306:5;3298:14;;2988:358;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:345:19:-;;110:66;126:49;168:6;126:49;:::i;:::-;110:66;:::i;:::-;101:75;;199:6;192:5;185:21;237:4;230:5;226:16;275:3;266:6;261:3;257:16;254:25;251:2;;;292:1;289;282:12;251:2;305:41;339:6;334:3;329;305:41;:::i;:::-;91:261;;;;;;:::o;372:273::-;;477:3;470:4;462:6;458:17;454:27;444:2;;495:1;492;485:12;444:2;535:6;522:20;560:79;635:3;627:6;620:4;612:6;608:17;560:79;:::i;:::-;551:88;;434:211;;;;;:::o;651:139::-;;735:6;722:20;713:29;;751:33;778:5;751:33;:::i;:::-;703:87;;;;:::o;796:520::-;;;931:2;919:9;910:7;906:23;902:32;899:2;;;947:1;944;937:12;899:2;1018:1;1007:9;1003:17;990:31;1048:18;1040:6;1037:30;1034:2;;;1080:1;1077;1070:12;1034:2;1108:63;1163:7;1154:6;1143:9;1139:22;1108:63;:::i;:::-;1098:73;;961:220;1220:2;1246:53;1291:7;1282:6;1271:9;1267:22;1246:53;:::i;:::-;1236:63;;1191:118;889:427;;;;;:::o;1322:109::-;1403:21;1418:5;1403:21;:::i;:::-;1398:3;1391:34;1381:50;;:::o;1437:366::-;;1600:67;1664:2;1659:3;1600:67;:::i;:::-;1593:74;;1676:93;1765:3;1676:93;:::i;:::-;1794:2;1789:3;1785:12;1778:19;;1583:220;;;:::o;1809:210::-;;1934:2;1923:9;1919:18;1911:26;;1947:65;2009:1;1998:9;1994:17;1985:6;1947:65;:::i;:::-;1901:118;;;;:::o;2025:419::-;;2229:2;2218:9;2214:18;2206:26;;2278:9;2272:4;2268:20;2264:1;2253:9;2249:17;2242:47;2306:131;2432:4;2306:131;:::i;:::-;2298:139;;2196:248;;;:::o;2450:129::-;;2511:20;;:::i;:::-;2501:30;;2540:33;2568:4;2560:6;2540:33;:::i;:::-;2491:88;;;:::o;2585:75::-;;2651:2;2645:9;2635:19;;2625:35;:::o;2666:308::-;;2818:18;2810:6;2807:30;2804:2;;;2840:18;;:::i;:::-;2804:2;2878:29;2900:6;2878:29;:::i;:::-;2870:37;;2962:4;2956;2952:15;2944:23;;2733:241;;;:::o;2980:169::-;;3098:6;3093:3;3086:19;3138:4;3133:3;3129:14;3114:29;;3076:73;;;;:::o;3155:90::-;;3232:5;3225:13;3218:21;3207:32;;3197:48;;;:::o;3251:77::-;;3317:5;3306:16;;3296:32;;;:::o;3334:86::-;;3409:4;3402:5;3398:16;3387:27;;3377:43;;;:::o;3426:154::-;3510:6;3505:3;3500;3487:30;3572:1;3563:6;3558:3;3554:16;3547:27;3477:103;;;:::o;3586:320::-;;3667:1;3661:4;3657:12;3647:22;;3714:1;3708:4;3704:12;3735:18;3725:2;;3791:4;3783:6;3779:17;3769:27;;3725:2;3853;3845:6;3842:14;3822:18;3819:38;3816:2;;;3872:18;;:::i;:::-;3816:2;3637:269;;;;:::o;3912:281::-;3995:27;4017:4;3995:27;:::i;:::-;3987:6;3983:40;4125:6;4113:10;4110:22;4089:18;4077:10;4074:34;4071:62;4068:2;;;4136:18;;:::i;:::-;4068:2;4176:10;4172:2;4165:22;3955:238;;;:::o;4199:167::-;;4259:22;4275:5;4259:22;:::i;:::-;4250:31;;4303:4;4296:5;4293:15;4290:2;;;4311:18;;:::i;:::-;4290:2;4358:1;4351:5;4347:13;4340:20;;4240:126;;;:::o;4372:180::-;4420:77;4417:1;4410:88;4517:4;4514:1;4507:15;4541:4;4538:1;4531:15;4558:180;4606:77;4603:1;4596:88;4703:4;4700:1;4693:15;4727:4;4724:1;4717:15;4744:180;4792:77;4789:1;4782:88;4889:4;4886:1;4879:15;4913:4;4910:1;4903:15;4930:102;;5022:2;5018:7;5013:2;5006:5;5002:14;4998:28;4988:38;;4978:54;;;:::o;5038:173::-;5178:25;5174:1;5166:6;5162:14;5155:49;5144:67;:::o;5217:122::-;5290:24;5308:5;5290:24;:::i;:::-;5283:5;5280:35;5270:2;;5329:1;5326;5319:12;5270:2;5260:79;:::o",
  "source": "// \"SPDX-License-Identifier: UNLICENSED\"\n\npragma solidity ^0.8.3;\n\n// import \"./ACHouseToken.sol\";\n\ncontract ACHouse  {\n    \n    \n    /** Variables and Event Emitters */\n    struct Auction {\n        string name;\n        address id; // wallet address of init setup\n    }\n\n    struct Artist {\n        string name;\n        address id; // wallet address of init setup\n    }\n\n    struct Participant {\n        string name;\n        address id;\n    }\n\n    address[] RegisteredUserAddresses;\n\n    mapping (address => Auction) AuctionMapping;\n    mapping (address => Artist) ArtistMapping;\n    mapping (address => Participant ) ParticipantMapping;\n\n    /**Functions - Registration  */\n    function register(string memory _name, uint _userType) public returns (bool) {\n        require(isUserRegistered(msg.sender) == false, \"User Already registered\");\n\n        //userType { 1: Auction, 2: Artist, 3: Participant}\n        // register user by type\n        if(_userType == 1){\n            Auction memory ac = Auction(_name, msg.sender);\n            AuctionMapping[msg.sender] = ac;\n        }else if( _userType == 2){\n            Artist memory ar = Artist(_name, msg.sender);\n            ArtistMapping[msg.sender] = ar;\n        }else {\n            Participant memory part = Participant(_name, msg.sender);\n            ParticipantMapping[msg.sender] = part;\n        }\n\n        RegisteredUserAddresses.push(msg.sender);\n        return true;\n    }\n\n    /** after user connects wallet to web3 and gets access to website. \n    Options avaiable for USER:\n        Create NFT \n        Fractionalize NFT\n\n    function createNFT(string memory _name, string memory _symbol, string memory _desc, string memory _imageURL) public {\n\n        // if using ERC1155 - we need to create a JSON object and store it in IPFS or in blockchain. it requires a URI pointed at json file and then minting can take place. \n        // if using ERC721 - only name and symbol is needed to along with unique id for the NFT to create. \n\n        //calls ACHouseToken.mintERC1155 or ACHouseToken.mintERC721 depending on implementation\n    }\n\n    function fracNFT(string memory _shardName, string memory _shardSymbol, uint256 supply, uint256 _ownerRetain, uint256 _price) public {\n        // owner retain - amount of shards (tokes) will be given to the user, if all then end of steps. \n        // if user wants to generate funds, owner retain will be less than 100 and user sets price per shard (token). \n\n        //calls ACHouseToken.mintERC1155 or ACHouseToken.mintERC20 depending on implementation\n    }\n    */\n\n    function createNFT() public {\n\n        // if using ERC1155 - we need to create a JSON object and store it in IPFS or in blockchain. it requires a URI pointed at json file and then minting can take place. \n        // if using ERC721 - only name and symbol is needed to along with unique id for the NFT to create. \n        //calls ACHouseToken.mintERC1155 or ACHouseToken.mintERC721 depending on implementation\n    }\n\n\n\n    function isUserRegistered( address _address) internal view returns (bool) {\n         \n        for( uint8 j = 0; j < RegisteredUserAddresses.length; j++){\n             \n            if(RegisteredUserAddresses[j] == _address){\n                return (true); // user is registered.\n            }\n        }\n        return (false); // user is not registered.\n    }\n\n}\n",
  "sourcePath": "/home/dinesh/Projects/BnktAuction/contracts/ACHouse.sol",
  "ast": {
    "absolutePath": "/home/dinesh/Projects/BnktAuction/contracts/ACHouse.sol",
    "exportedSymbols": {
      "ACHouse": [
        163
      ]
    },
    "id": 164,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 163,
        "linearizedBaseContracts": [
          163
        ],
        "name": "ACHouse",
        "nameLocation": "109:7:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "ACHouse.Auction",
            "id": 6,
            "members": [
              {
                "constant": false,
                "id": 3,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "206:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 6,
                "src": "199:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 2,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "199:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 5,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "228:2:0",
                "nodeType": "VariableDeclaration",
                "scope": 6,
                "src": "220:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 4,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "220:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Auction",
            "nameLocation": "181:7:0",
            "nodeType": "StructDefinition",
            "scope": 163,
            "src": "174:95:0",
            "visibility": "public"
          },
          {
            "canonicalName": "ACHouse.Artist",
            "id": 11,
            "members": [
              {
                "constant": false,
                "id": 8,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "306:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 11,
                "src": "299:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 7,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "299:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "328:2:0",
                "nodeType": "VariableDeclaration",
                "scope": 11,
                "src": "320:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 9,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "320:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Artist",
            "nameLocation": "282:6:0",
            "nodeType": "StructDefinition",
            "scope": 163,
            "src": "275:94:0",
            "visibility": "public"
          },
          {
            "canonicalName": "ACHouse.Participant",
            "id": 16,
            "members": [
              {
                "constant": false,
                "id": 13,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "411:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 16,
                "src": "404:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 12,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "404:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "433:2:0",
                "nodeType": "VariableDeclaration",
                "scope": 16,
                "src": "425:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 14,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "425:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Participant",
            "nameLocation": "382:11:0",
            "nodeType": "StructDefinition",
            "scope": 163,
            "src": "375:67:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 19,
            "mutability": "mutable",
            "name": "RegisteredUserAddresses",
            "nameLocation": "458:23:0",
            "nodeType": "VariableDeclaration",
            "scope": 163,
            "src": "448:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 17,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "448:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 18,
              "nodeType": "ArrayTypeName",
              "src": "448:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24,
            "mutability": "mutable",
            "name": "AuctionMapping",
            "nameLocation": "517:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 163,
            "src": "488:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Auction_$6_storage_$",
              "typeString": "mapping(address => struct ACHouse.Auction)"
            },
            "typeName": {
              "id": 23,
              "keyType": {
                "id": 20,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "497:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "488:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Auction_$6_storage_$",
                "typeString": "mapping(address => struct ACHouse.Auction)"
              },
              "valueType": {
                "id": 22,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 21,
                  "name": "Auction",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6,
                  "src": "508:7:0"
                },
                "referencedDeclaration": 6,
                "src": "508:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Auction_$6_storage_ptr",
                  "typeString": "struct ACHouse.Auction"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 29,
            "mutability": "mutable",
            "name": "ArtistMapping",
            "nameLocation": "565:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 163,
            "src": "537:41:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Artist_$11_storage_$",
              "typeString": "mapping(address => struct ACHouse.Artist)"
            },
            "typeName": {
              "id": 28,
              "keyType": {
                "id": 25,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "546:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "537:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Artist_$11_storage_$",
                "typeString": "mapping(address => struct ACHouse.Artist)"
              },
              "valueType": {
                "id": 27,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 26,
                  "name": "Artist",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11,
                  "src": "557:6:0"
                },
                "referencedDeclaration": 11,
                "src": "557:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Artist_$11_storage_ptr",
                  "typeString": "struct ACHouse.Artist"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 34,
            "mutability": "mutable",
            "name": "ParticipantMapping",
            "nameLocation": "618:18:0",
            "nodeType": "VariableDeclaration",
            "scope": 163,
            "src": "584:52:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Participant_$16_storage_$",
              "typeString": "mapping(address => struct ACHouse.Participant)"
            },
            "typeName": {
              "id": 33,
              "keyType": {
                "id": 30,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "593:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "584:33:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Participant_$16_storage_$",
                "typeString": "mapping(address => struct ACHouse.Participant)"
              },
              "valueType": {
                "id": 32,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 31,
                  "name": "Participant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 16,
                  "src": "604:11:0"
                },
                "referencedDeclaration": 16,
                "src": "604:11:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Participant_$16_storage_ptr",
                  "typeString": "struct ACHouse.Participant"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 122,
              "nodeType": "Block",
              "src": "756:673:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 50,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 46,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "791:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 47,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "791:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 45,
                            "name": "isUserRegistered",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 162,
                            "src": "774:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 48,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "774:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 49,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "806:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "774:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5573657220416c72656164792072656769737465726564",
                        "id": 51,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "813:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f39789fb8036270d25b07acb9ca0aeb2c90c4c6cd78ca329efeb934be4cc21cf",
                          "typeString": "literal_string \"User Already registered\""
                        },
                        "value": "User Already registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f39789fb8036270d25b07acb9ca0aeb2c90c4c6cd78ca329efeb934be4cc21cf",
                          "typeString": "literal_string \"User Already registered\""
                        }
                      ],
                      "id": 44,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "766:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "766:73:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53,
                  "nodeType": "ExpressionStatement",
                  "src": "766:73:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 56,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 54,
                      "name": "_userType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "946:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 55,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "959:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "946:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 76,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 74,
                        "name": "_userType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "1086:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1099:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "1086:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 110,
                      "nodeType": "Block",
                      "src": "1219:132:0",
                      "statements": [
                        {
                          "assignments": [
                            96
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 96,
                              "mutability": "mutable",
                              "name": "part",
                              "nameLocation": "1252:4:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 110,
                              "src": "1233:23:0",
                              "stateVariable": false,
                              "storageLocation": "memory",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Participant_$16_memory_ptr",
                                "typeString": "struct ACHouse.Participant"
                              },
                              "typeName": {
                                "id": 95,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 94,
                                  "name": "Participant",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 16,
                                  "src": "1233:11:0"
                                },
                                "referencedDeclaration": 16,
                                "src": "1233:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Participant_$16_storage_ptr",
                                  "typeString": "struct ACHouse.Participant"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 102,
                          "initialValue": {
                            "arguments": [
                              {
                                "id": 98,
                                "name": "_name",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37,
                                "src": "1271:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "expression": {
                                  "id": 99,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "1278:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 100,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1278:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 97,
                              "name": "Participant",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16,
                              "src": "1259:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Participant_$16_storage_ptr_$",
                                "typeString": "type(struct ACHouse.Participant storage pointer)"
                              }
                            },
                            "id": 101,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1259:30:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Participant_$16_memory_ptr",
                              "typeString": "struct ACHouse.Participant memory"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "1233:56:0"
                        },
                        {
                          "expression": {
                            "id": 108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "baseExpression": {
                                "id": 103,
                                "name": "ParticipantMapping",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34,
                                "src": "1303:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Participant_$16_storage_$",
                                  "typeString": "mapping(address => struct ACHouse.Participant storage ref)"
                                }
                              },
                              "id": 106,
                              "indexExpression": {
                                "expression": {
                                  "id": 104,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "1322:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 105,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1322:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "nodeType": "IndexAccess",
                              "src": "1303:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Participant_$16_storage",
                                "typeString": "struct ACHouse.Participant storage ref"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "id": 107,
                              "name": "part",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 96,
                              "src": "1336:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Participant_$16_memory_ptr",
                                "typeString": "struct ACHouse.Participant memory"
                              }
                            },
                            "src": "1303:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Participant_$16_storage",
                              "typeString": "struct ACHouse.Participant storage ref"
                            }
                          },
                          "id": 109,
                          "nodeType": "ExpressionStatement",
                          "src": "1303:37:0"
                        }
                      ]
                    },
                    "id": 111,
                    "nodeType": "IfStatement",
                    "src": "1082:269:0",
                    "trueBody": {
                      "id": 93,
                      "nodeType": "Block",
                      "src": "1101:113:0",
                      "statements": [
                        {
                          "assignments": [
                            79
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 79,
                              "mutability": "mutable",
                              "name": "ar",
                              "nameLocation": "1129:2:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 93,
                              "src": "1115:16:0",
                              "stateVariable": false,
                              "storageLocation": "memory",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Artist_$11_memory_ptr",
                                "typeString": "struct ACHouse.Artist"
                              },
                              "typeName": {
                                "id": 78,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 77,
                                  "name": "Artist",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 11,
                                  "src": "1115:6:0"
                                },
                                "referencedDeclaration": 11,
                                "src": "1115:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Artist_$11_storage_ptr",
                                  "typeString": "struct ACHouse.Artist"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 85,
                          "initialValue": {
                            "arguments": [
                              {
                                "id": 81,
                                "name": "_name",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37,
                                "src": "1141:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "expression": {
                                  "id": 82,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "1148:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 83,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1148:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 80,
                              "name": "Artist",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11,
                              "src": "1134:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Artist_$11_storage_ptr_$",
                                "typeString": "type(struct ACHouse.Artist storage pointer)"
                              }
                            },
                            "id": 84,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1134:25:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Artist_$11_memory_ptr",
                              "typeString": "struct ACHouse.Artist memory"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "1115:44:0"
                        },
                        {
                          "expression": {
                            "id": 91,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "baseExpression": {
                                "id": 86,
                                "name": "ArtistMapping",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29,
                                "src": "1173:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Artist_$11_storage_$",
                                  "typeString": "mapping(address => struct ACHouse.Artist storage ref)"
                                }
                              },
                              "id": 89,
                              "indexExpression": {
                                "expression": {
                                  "id": 87,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "1187:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 88,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1187:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "nodeType": "IndexAccess",
                              "src": "1173:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Artist_$11_storage",
                                "typeString": "struct ACHouse.Artist storage ref"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "id": 90,
                              "name": "ar",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79,
                              "src": "1201:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Artist_$11_memory_ptr",
                                "typeString": "struct ACHouse.Artist memory"
                              }
                            },
                            "src": "1173:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Artist_$11_storage",
                              "typeString": "struct ACHouse.Artist storage ref"
                            }
                          },
                          "id": 92,
                          "nodeType": "ExpressionStatement",
                          "src": "1173:30:0"
                        }
                      ]
                    }
                  },
                  "id": 112,
                  "nodeType": "IfStatement",
                  "src": "943:408:0",
                  "trueBody": {
                    "id": 73,
                    "nodeType": "Block",
                    "src": "961:116:0",
                    "statements": [
                      {
                        "assignments": [
                          59
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 59,
                            "mutability": "mutable",
                            "name": "ac",
                            "nameLocation": "990:2:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 73,
                            "src": "975:17:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Auction_$6_memory_ptr",
                              "typeString": "struct ACHouse.Auction"
                            },
                            "typeName": {
                              "id": 58,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 57,
                                "name": "Auction",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 6,
                                "src": "975:7:0"
                              },
                              "referencedDeclaration": 6,
                              "src": "975:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Auction_$6_storage_ptr",
                                "typeString": "struct ACHouse.Auction"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 65,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 61,
                              "name": "_name",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37,
                              "src": "1003:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "expression": {
                                "id": 62,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1010:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 63,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1010:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 60,
                            "name": "Auction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6,
                            "src": "995:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Auction_$6_storage_ptr_$",
                              "typeString": "type(struct ACHouse.Auction storage pointer)"
                            }
                          },
                          "id": 64,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "995:26:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Auction_$6_memory_ptr",
                            "typeString": "struct ACHouse.Auction memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "975:46:0"
                      },
                      {
                        "expression": {
                          "id": 71,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 66,
                              "name": "AuctionMapping",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "1035:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Auction_$6_storage_$",
                                "typeString": "mapping(address => struct ACHouse.Auction storage ref)"
                              }
                            },
                            "id": 69,
                            "indexExpression": {
                              "expression": {
                                "id": 67,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1050:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 68,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1050:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1035:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Auction_$6_storage",
                              "typeString": "struct ACHouse.Auction storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 70,
                            "name": "ac",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59,
                            "src": "1064:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Auction_$6_memory_ptr",
                              "typeString": "struct ACHouse.Auction memory"
                            }
                          },
                          "src": "1035:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Auction_$6_storage",
                            "typeString": "struct ACHouse.Auction storage ref"
                          }
                        },
                        "id": 72,
                        "nodeType": "ExpressionStatement",
                        "src": "1035:31:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 116,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1390:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1390:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 113,
                        "name": "RegisteredUserAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "1361:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1361:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1361:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 119,
                  "nodeType": "ExpressionStatement",
                  "src": "1361:40:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1418:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 43,
                  "id": 121,
                  "nodeType": "Return",
                  "src": "1411:11:0"
                }
              ]
            },
            "documentation": {
              "id": 35,
              "nodeType": "StructuredDocumentation",
              "src": "643:31:0",
              "text": "Functions - Registration  "
            },
            "functionSelector": "ea87152b",
            "id": 123,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "register",
            "nameLocation": "688:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "711:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "697:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "697:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39,
                  "mutability": "mutable",
                  "name": "_userType",
                  "nameLocation": "723:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "718:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "718:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "696:37:0"
            },
            "returnParameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "750:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "750:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "749:6:0"
            },
            "scope": 163,
            "src": "679:750:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 127,
              "nodeType": "Block",
              "src": "2594:386:0",
              "statements": []
            },
            "documentation": {
              "id": 124,
              "nodeType": "StructuredDocumentation",
              "src": "1435:1125:0",
              "text": "after user connects wallet to web3 and gets access to website. \nOptions avaiable for USER:\nCreate NFT \nFractionalize NFT\nfunction createNFT(string memory _name, string memory _symbol, string memory _desc, string memory _imageURL) public {\n// if using ERC1155 - we need to create a JSON object and store it in IPFS or in blockchain. it requires a URI pointed at json file and then minting can take place. \n// if using ERC721 - only name and symbol is needed to along with unique id for the NFT to create. \n//calls ACHouseToken.mintERC1155 or ACHouseToken.mintERC721 depending on implementation\n}\nfunction fracNFT(string memory _shardName, string memory _shardSymbol, uint256 supply, uint256 _ownerRetain, uint256 _price) public {\n// owner retain - amount of shards (tokes) will be given to the user, if all then end of steps. \n// if user wants to generate funds, owner retain will be less than 100 and user sets price per shard (token). \n//calls ACHouseToken.mintERC1155 or ACHouseToken.mintERC20 depending on implementation\n}"
            },
            "functionSelector": "8a97ec2a",
            "id": 128,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createNFT",
            "nameLocation": "2575:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2584:2:0"
            },
            "returnParameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2594:0:0"
            },
            "scope": 163,
            "src": "2566:414:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 161,
              "nodeType": "Block",
              "src": "3062:284:0",
              "statements": [
                {
                  "body": {
                    "id": 156,
                    "nodeType": "Block",
                    "src": "3140:149:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 146,
                              "name": "RegisteredUserAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19,
                              "src": "3171:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 148,
                            "indexExpression": {
                              "id": 147,
                              "name": "j",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 136,
                              "src": "3195:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3171:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 149,
                            "name": "_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 130,
                            "src": "3201:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3171:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 155,
                        "nodeType": "IfStatement",
                        "src": "3168:111:0",
                        "trueBody": {
                          "id": 154,
                          "nodeType": "Block",
                          "src": "3210:69:0",
                          "statements": [
                            {
                              "expression": {
                                "components": [
                                  {
                                    "hexValue": "74727565",
                                    "id": 151,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3236:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "true"
                                  }
                                ],
                                "id": 152,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "3235:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "functionReturnParameters": 134,
                              "id": 153,
                              "nodeType": "Return",
                              "src": "3228:13:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 139,
                      "name": "j",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 136,
                      "src": "3100:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 140,
                        "name": "RegisteredUserAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "3104:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3104:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3100:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 157,
                  "initializationExpression": {
                    "assignments": [
                      136
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 136,
                        "mutability": "mutable",
                        "name": "j",
                        "nameLocation": "3093:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 157,
                        "src": "3087:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 135,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3087:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 138,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3097:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3087:11:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3136:3:0",
                      "subExpression": {
                        "id": 143,
                        "name": "j",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 136,
                        "src": "3136:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 145,
                    "nodeType": "ExpressionStatement",
                    "src": "3136:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "3082:207:0"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "66616c7365",
                        "id": 158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3306:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "id": 159,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3305:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 134,
                  "id": 160,
                  "nodeType": "Return",
                  "src": "3298:14:0"
                }
              ]
            },
            "id": 162,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isUserRegistered",
            "nameLocation": "2997:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 130,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "3023:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 162,
                  "src": "3015:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 129,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3015:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3013:19:0"
            },
            "returnParameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 133,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 162,
                  "src": "3056:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 132,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3056:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3055:6:0"
            },
            "scope": 163,
            "src": "2988:358:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 164,
        "src": "100:3249:0"
      }
    ],
    "src": "42:3308:0"
  },
  "legacyAST": {
    "absolutePath": "/home/dinesh/Projects/BnktAuction/contracts/ACHouse.sol",
    "exportedSymbols": {
      "ACHouse": [
        163
      ]
    },
    "id": 164,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 163,
        "linearizedBaseContracts": [
          163
        ],
        "name": "ACHouse",
        "nameLocation": "109:7:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "ACHouse.Auction",
            "id": 6,
            "members": [
              {
                "constant": false,
                "id": 3,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "206:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 6,
                "src": "199:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 2,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "199:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 5,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "228:2:0",
                "nodeType": "VariableDeclaration",
                "scope": 6,
                "src": "220:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 4,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "220:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Auction",
            "nameLocation": "181:7:0",
            "nodeType": "StructDefinition",
            "scope": 163,
            "src": "174:95:0",
            "visibility": "public"
          },
          {
            "canonicalName": "ACHouse.Artist",
            "id": 11,
            "members": [
              {
                "constant": false,
                "id": 8,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "306:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 11,
                "src": "299:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 7,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "299:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "328:2:0",
                "nodeType": "VariableDeclaration",
                "scope": 11,
                "src": "320:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 9,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "320:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Artist",
            "nameLocation": "282:6:0",
            "nodeType": "StructDefinition",
            "scope": 163,
            "src": "275:94:0",
            "visibility": "public"
          },
          {
            "canonicalName": "ACHouse.Participant",
            "id": 16,
            "members": [
              {
                "constant": false,
                "id": 13,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "411:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 16,
                "src": "404:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 12,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "404:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "433:2:0",
                "nodeType": "VariableDeclaration",
                "scope": 16,
                "src": "425:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 14,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "425:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Participant",
            "nameLocation": "382:11:0",
            "nodeType": "StructDefinition",
            "scope": 163,
            "src": "375:67:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 19,
            "mutability": "mutable",
            "name": "RegisteredUserAddresses",
            "nameLocation": "458:23:0",
            "nodeType": "VariableDeclaration",
            "scope": 163,
            "src": "448:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 17,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "448:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 18,
              "nodeType": "ArrayTypeName",
              "src": "448:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24,
            "mutability": "mutable",
            "name": "AuctionMapping",
            "nameLocation": "517:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 163,
            "src": "488:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Auction_$6_storage_$",
              "typeString": "mapping(address => struct ACHouse.Auction)"
            },
            "typeName": {
              "id": 23,
              "keyType": {
                "id": 20,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "497:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "488:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Auction_$6_storage_$",
                "typeString": "mapping(address => struct ACHouse.Auction)"
              },
              "valueType": {
                "id": 22,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 21,
                  "name": "Auction",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6,
                  "src": "508:7:0"
                },
                "referencedDeclaration": 6,
                "src": "508:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Auction_$6_storage_ptr",
                  "typeString": "struct ACHouse.Auction"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 29,
            "mutability": "mutable",
            "name": "ArtistMapping",
            "nameLocation": "565:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 163,
            "src": "537:41:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Artist_$11_storage_$",
              "typeString": "mapping(address => struct ACHouse.Artist)"
            },
            "typeName": {
              "id": 28,
              "keyType": {
                "id": 25,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "546:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "537:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Artist_$11_storage_$",
                "typeString": "mapping(address => struct ACHouse.Artist)"
              },
              "valueType": {
                "id": 27,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 26,
                  "name": "Artist",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11,
                  "src": "557:6:0"
                },
                "referencedDeclaration": 11,
                "src": "557:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Artist_$11_storage_ptr",
                  "typeString": "struct ACHouse.Artist"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 34,
            "mutability": "mutable",
            "name": "ParticipantMapping",
            "nameLocation": "618:18:0",
            "nodeType": "VariableDeclaration",
            "scope": 163,
            "src": "584:52:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Participant_$16_storage_$",
              "typeString": "mapping(address => struct ACHouse.Participant)"
            },
            "typeName": {
              "id": 33,
              "keyType": {
                "id": 30,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "593:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "584:33:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Participant_$16_storage_$",
                "typeString": "mapping(address => struct ACHouse.Participant)"
              },
              "valueType": {
                "id": 32,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 31,
                  "name": "Participant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 16,
                  "src": "604:11:0"
                },
                "referencedDeclaration": 16,
                "src": "604:11:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Participant_$16_storage_ptr",
                  "typeString": "struct ACHouse.Participant"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 122,
              "nodeType": "Block",
              "src": "756:673:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 50,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 46,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "791:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 47,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "791:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 45,
                            "name": "isUserRegistered",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 162,
                            "src": "774:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 48,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "774:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 49,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "806:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "774:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5573657220416c72656164792072656769737465726564",
                        "id": 51,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "813:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f39789fb8036270d25b07acb9ca0aeb2c90c4c6cd78ca329efeb934be4cc21cf",
                          "typeString": "literal_string \"User Already registered\""
                        },
                        "value": "User Already registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f39789fb8036270d25b07acb9ca0aeb2c90c4c6cd78ca329efeb934be4cc21cf",
                          "typeString": "literal_string \"User Already registered\""
                        }
                      ],
                      "id": 44,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "766:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "766:73:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53,
                  "nodeType": "ExpressionStatement",
                  "src": "766:73:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 56,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 54,
                      "name": "_userType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "946:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 55,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "959:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "946:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 76,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 74,
                        "name": "_userType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "1086:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1099:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "1086:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 110,
                      "nodeType": "Block",
                      "src": "1219:132:0",
                      "statements": [
                        {
                          "assignments": [
                            96
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 96,
                              "mutability": "mutable",
                              "name": "part",
                              "nameLocation": "1252:4:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 110,
                              "src": "1233:23:0",
                              "stateVariable": false,
                              "storageLocation": "memory",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Participant_$16_memory_ptr",
                                "typeString": "struct ACHouse.Participant"
                              },
                              "typeName": {
                                "id": 95,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 94,
                                  "name": "Participant",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 16,
                                  "src": "1233:11:0"
                                },
                                "referencedDeclaration": 16,
                                "src": "1233:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Participant_$16_storage_ptr",
                                  "typeString": "struct ACHouse.Participant"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 102,
                          "initialValue": {
                            "arguments": [
                              {
                                "id": 98,
                                "name": "_name",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37,
                                "src": "1271:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "expression": {
                                  "id": 99,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "1278:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 100,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1278:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 97,
                              "name": "Participant",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16,
                              "src": "1259:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Participant_$16_storage_ptr_$",
                                "typeString": "type(struct ACHouse.Participant storage pointer)"
                              }
                            },
                            "id": 101,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1259:30:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Participant_$16_memory_ptr",
                              "typeString": "struct ACHouse.Participant memory"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "1233:56:0"
                        },
                        {
                          "expression": {
                            "id": 108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "baseExpression": {
                                "id": 103,
                                "name": "ParticipantMapping",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34,
                                "src": "1303:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Participant_$16_storage_$",
                                  "typeString": "mapping(address => struct ACHouse.Participant storage ref)"
                                }
                              },
                              "id": 106,
                              "indexExpression": {
                                "expression": {
                                  "id": 104,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "1322:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 105,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1322:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "nodeType": "IndexAccess",
                              "src": "1303:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Participant_$16_storage",
                                "typeString": "struct ACHouse.Participant storage ref"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "id": 107,
                              "name": "part",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 96,
                              "src": "1336:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Participant_$16_memory_ptr",
                                "typeString": "struct ACHouse.Participant memory"
                              }
                            },
                            "src": "1303:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Participant_$16_storage",
                              "typeString": "struct ACHouse.Participant storage ref"
                            }
                          },
                          "id": 109,
                          "nodeType": "ExpressionStatement",
                          "src": "1303:37:0"
                        }
                      ]
                    },
                    "id": 111,
                    "nodeType": "IfStatement",
                    "src": "1082:269:0",
                    "trueBody": {
                      "id": 93,
                      "nodeType": "Block",
                      "src": "1101:113:0",
                      "statements": [
                        {
                          "assignments": [
                            79
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 79,
                              "mutability": "mutable",
                              "name": "ar",
                              "nameLocation": "1129:2:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 93,
                              "src": "1115:16:0",
                              "stateVariable": false,
                              "storageLocation": "memory",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Artist_$11_memory_ptr",
                                "typeString": "struct ACHouse.Artist"
                              },
                              "typeName": {
                                "id": 78,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 77,
                                  "name": "Artist",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 11,
                                  "src": "1115:6:0"
                                },
                                "referencedDeclaration": 11,
                                "src": "1115:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Artist_$11_storage_ptr",
                                  "typeString": "struct ACHouse.Artist"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 85,
                          "initialValue": {
                            "arguments": [
                              {
                                "id": 81,
                                "name": "_name",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37,
                                "src": "1141:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "expression": {
                                  "id": 82,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "1148:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 83,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1148:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 80,
                              "name": "Artist",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11,
                              "src": "1134:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Artist_$11_storage_ptr_$",
                                "typeString": "type(struct ACHouse.Artist storage pointer)"
                              }
                            },
                            "id": 84,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1134:25:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Artist_$11_memory_ptr",
                              "typeString": "struct ACHouse.Artist memory"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "1115:44:0"
                        },
                        {
                          "expression": {
                            "id": 91,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "baseExpression": {
                                "id": 86,
                                "name": "ArtistMapping",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29,
                                "src": "1173:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Artist_$11_storage_$",
                                  "typeString": "mapping(address => struct ACHouse.Artist storage ref)"
                                }
                              },
                              "id": 89,
                              "indexExpression": {
                                "expression": {
                                  "id": 87,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "1187:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 88,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1187:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "nodeType": "IndexAccess",
                              "src": "1173:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Artist_$11_storage",
                                "typeString": "struct ACHouse.Artist storage ref"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "id": 90,
                              "name": "ar",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79,
                              "src": "1201:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Artist_$11_memory_ptr",
                                "typeString": "struct ACHouse.Artist memory"
                              }
                            },
                            "src": "1173:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Artist_$11_storage",
                              "typeString": "struct ACHouse.Artist storage ref"
                            }
                          },
                          "id": 92,
                          "nodeType": "ExpressionStatement",
                          "src": "1173:30:0"
                        }
                      ]
                    }
                  },
                  "id": 112,
                  "nodeType": "IfStatement",
                  "src": "943:408:0",
                  "trueBody": {
                    "id": 73,
                    "nodeType": "Block",
                    "src": "961:116:0",
                    "statements": [
                      {
                        "assignments": [
                          59
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 59,
                            "mutability": "mutable",
                            "name": "ac",
                            "nameLocation": "990:2:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 73,
                            "src": "975:17:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Auction_$6_memory_ptr",
                              "typeString": "struct ACHouse.Auction"
                            },
                            "typeName": {
                              "id": 58,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 57,
                                "name": "Auction",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 6,
                                "src": "975:7:0"
                              },
                              "referencedDeclaration": 6,
                              "src": "975:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Auction_$6_storage_ptr",
                                "typeString": "struct ACHouse.Auction"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 65,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 61,
                              "name": "_name",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37,
                              "src": "1003:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "expression": {
                                "id": 62,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1010:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 63,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1010:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 60,
                            "name": "Auction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6,
                            "src": "995:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Auction_$6_storage_ptr_$",
                              "typeString": "type(struct ACHouse.Auction storage pointer)"
                            }
                          },
                          "id": 64,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "995:26:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Auction_$6_memory_ptr",
                            "typeString": "struct ACHouse.Auction memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "975:46:0"
                      },
                      {
                        "expression": {
                          "id": 71,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 66,
                              "name": "AuctionMapping",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "1035:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Auction_$6_storage_$",
                                "typeString": "mapping(address => struct ACHouse.Auction storage ref)"
                              }
                            },
                            "id": 69,
                            "indexExpression": {
                              "expression": {
                                "id": 67,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1050:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 68,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1050:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1035:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Auction_$6_storage",
                              "typeString": "struct ACHouse.Auction storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 70,
                            "name": "ac",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59,
                            "src": "1064:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Auction_$6_memory_ptr",
                              "typeString": "struct ACHouse.Auction memory"
                            }
                          },
                          "src": "1035:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Auction_$6_storage",
                            "typeString": "struct ACHouse.Auction storage ref"
                          }
                        },
                        "id": 72,
                        "nodeType": "ExpressionStatement",
                        "src": "1035:31:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 116,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1390:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1390:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 113,
                        "name": "RegisteredUserAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "1361:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1361:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1361:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 119,
                  "nodeType": "ExpressionStatement",
                  "src": "1361:40:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1418:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 43,
                  "id": 121,
                  "nodeType": "Return",
                  "src": "1411:11:0"
                }
              ]
            },
            "documentation": {
              "id": 35,
              "nodeType": "StructuredDocumentation",
              "src": "643:31:0",
              "text": "Functions - Registration  "
            },
            "functionSelector": "ea87152b",
            "id": 123,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "register",
            "nameLocation": "688:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "711:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "697:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "697:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39,
                  "mutability": "mutable",
                  "name": "_userType",
                  "nameLocation": "723:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "718:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "718:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "696:37:0"
            },
            "returnParameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "750:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "750:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "749:6:0"
            },
            "scope": 163,
            "src": "679:750:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 127,
              "nodeType": "Block",
              "src": "2594:386:0",
              "statements": []
            },
            "documentation": {
              "id": 124,
              "nodeType": "StructuredDocumentation",
              "src": "1435:1125:0",
              "text": "after user connects wallet to web3 and gets access to website. \nOptions avaiable for USER:\nCreate NFT \nFractionalize NFT\nfunction createNFT(string memory _name, string memory _symbol, string memory _desc, string memory _imageURL) public {\n// if using ERC1155 - we need to create a JSON object and store it in IPFS or in blockchain. it requires a URI pointed at json file and then minting can take place. \n// if using ERC721 - only name and symbol is needed to along with unique id for the NFT to create. \n//calls ACHouseToken.mintERC1155 or ACHouseToken.mintERC721 depending on implementation\n}\nfunction fracNFT(string memory _shardName, string memory _shardSymbol, uint256 supply, uint256 _ownerRetain, uint256 _price) public {\n// owner retain - amount of shards (tokes) will be given to the user, if all then end of steps. \n// if user wants to generate funds, owner retain will be less than 100 and user sets price per shard (token). \n//calls ACHouseToken.mintERC1155 or ACHouseToken.mintERC20 depending on implementation\n}"
            },
            "functionSelector": "8a97ec2a",
            "id": 128,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createNFT",
            "nameLocation": "2575:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2584:2:0"
            },
            "returnParameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2594:0:0"
            },
            "scope": 163,
            "src": "2566:414:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 161,
              "nodeType": "Block",
              "src": "3062:284:0",
              "statements": [
                {
                  "body": {
                    "id": 156,
                    "nodeType": "Block",
                    "src": "3140:149:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 146,
                              "name": "RegisteredUserAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19,
                              "src": "3171:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 148,
                            "indexExpression": {
                              "id": 147,
                              "name": "j",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 136,
                              "src": "3195:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3171:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 149,
                            "name": "_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 130,
                            "src": "3201:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3171:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 155,
                        "nodeType": "IfStatement",
                        "src": "3168:111:0",
                        "trueBody": {
                          "id": 154,
                          "nodeType": "Block",
                          "src": "3210:69:0",
                          "statements": [
                            {
                              "expression": {
                                "components": [
                                  {
                                    "hexValue": "74727565",
                                    "id": 151,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3236:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "true"
                                  }
                                ],
                                "id": 152,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "3235:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "functionReturnParameters": 134,
                              "id": 153,
                              "nodeType": "Return",
                              "src": "3228:13:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 139,
                      "name": "j",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 136,
                      "src": "3100:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 140,
                        "name": "RegisteredUserAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "3104:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3104:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3100:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 157,
                  "initializationExpression": {
                    "assignments": [
                      136
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 136,
                        "mutability": "mutable",
                        "name": "j",
                        "nameLocation": "3093:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 157,
                        "src": "3087:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 135,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3087:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 138,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3097:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3087:11:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3136:3:0",
                      "subExpression": {
                        "id": 143,
                        "name": "j",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 136,
                        "src": "3136:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 145,
                    "nodeType": "ExpressionStatement",
                    "src": "3136:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "3082:207:0"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "66616c7365",
                        "id": 158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3306:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "id": 159,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3305:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 134,
                  "id": 160,
                  "nodeType": "Return",
                  "src": "3298:14:0"
                }
              ]
            },
            "id": 162,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isUserRegistered",
            "nameLocation": "2997:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 130,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "3023:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 162,
                  "src": "3015:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 129,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3015:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3013:19:0"
            },
            "returnParameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 133,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 162,
                  "src": "3056:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 132,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3056:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3055:6:0"
            },
            "scope": 163,
            "src": "2988:358:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 164,
        "src": "100:3249:0"
      }
    ],
    "src": "42:3308:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.3+commit.8d00100c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-09-29T01:55:33.299Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "createNFT()": {
        "notice": "after user connects wallet to web3 and gets access to website.  Options avaiable for USER: Create NFT  Fractionalize NFT function createNFT(string memory _name, string memory _symbol, string memory _desc, string memory _imageURL) public { // if using ERC1155 - we need to create a JSON object and store it in IPFS or in blockchain. it requires a URI pointed at json file and then minting can take place.  // if using ERC721 - only name and symbol is needed to along with unique id for the NFT to create.  //calls ACHouseToken.mintERC1155 or ACHouseToken.mintERC721 depending on implementation } function fracNFT(string memory _shardName, string memory _shardSymbol, uint256 supply, uint256 _ownerRetain, uint256 _price) public { // owner retain - amount of shards (tokes) will be given to the user, if all then end of steps.  // if user wants to generate funds, owner retain will be less than 100 and user sets price per shard (token).  //calls ACHouseToken.mintERC1155 or ACHouseToken.mintERC20 depending on implementation }"
      },
      "register(string,uint256)": {
        "notice": "Functions - Registration  "
      }
    },
    "version": 1
  }
}